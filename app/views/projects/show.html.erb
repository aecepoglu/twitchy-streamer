<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/styles/solarized-dark.min.css">
<script src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.9.0/highlight.min.js"></script>


<style>
  pre {
    border-color: #464545;
    background-color: inherit;
  }

  .clickable {
    cursor: pointer
  }

  .file-icon {
    margin-right: 1em
  }

  .file-button {
    margin-left: 0.5em;
  }

  .hidden {
    display: none
  }

  .with-loading-anim {
    position: relative;
  }

  .with-loading-anim .loading-anim {
    position: absolute;

    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 20px 0;
    text-align: center;
  
    opacity: 0;
    visibility: hidden;
    transition: visibility 0s linear 0.5s, opacity 0.5s;
  }

  .with-loading-anim.loading .contents {
    min-height: 190px;
  }

  .with-loading-anim.loading .loading-anim {
    visibility: visible;
    opacity: 1;
    transition: none;
  }
</style>

<script>
var $dir, $fileContainer, fileLabel;
var currentFile;
var activeItem; //currently selected dir item


function buildFileItemId(dir, name) {
  
}

function hideChildren(elem, hide) {
  var $elem = $(elem);

  elem.files.forEach(function(it) {
    var $it = $(it);

    if (hide) {
      $it.addClass("hidden");
    } else {
      $it.removeClass("hidden");
    }

    if (it.files && (hide || $it.hasClass("dir-open"))) {
      hideChildren(it, hide);
    }
  });
}

function toggleDir(ev) {
  var elem = this;
  var $elem = $(elem)
  var $icon = $elem.find(".glyphicon");

  var isOpen = $elem.hasClass("dir-open");

  if (isOpen) {
    $elem.removeClass("dir-open");

    $icon.addClass("glyphicon-folder-close");
    $icon.removeClass("glyphicon-folder-open");
  } else {
    $elem.addClass("dir-open");

    $icon.addClass("glyphicon-folder-open");
    $icon.removeClass("glyphicon-folder-close");
  }

  hideChildren(elem, isOpen);
}

function openFile(file) {
  if (!file && currentFile) {
    file = currentFile;
  } else {
    currentFile = file;
  }

  var fileContents = $fileContainer.find(".contents")[0];
  fileLabel.innerHTML = file.name;
  document.title = file.name;
  
  $(".file-control").each(function(i, it) {
    $(it).removeClass("hidden");
  });

  if (file.type) {
    console.log("opening type", file.type);

    var mediaType = file.type.split("/")[0];

    if (mediaType == "image") {
      fileContents.innerHTML = '<img class="img-responsive center-block" src="' + file.url + '"/>';
    } else /*if (mediaType == "text")*/ {
      fileContents.innerHTML = "";

      $fileContainer.addClass("loading");

      $.ajax({
        method: "get",
        url: file.url,
        dataType: "text"
      })
      .done(function(data) {
        fileContents.innerHTML = data.replace(/&/g, "&amp;")
          .replace(/>/g, "&gt;")
          .replace(/</g, "&lt;");

        fileContents.className = "contents highlight lang-" + file.ext;

        hljs.highlightBlock(fileContents);
      })
      .fail(function(_, err) {
        alert(err);
      })
      .always(function() {
        $fileContainer.removeClass("loading");
      });
    }
  }
}

function addDirEntry(it) {
  var li = document.createElement("a");
  li.className = "list-group-item clickable";
  li.id = "p-" + (it.dir ? (it.dir + "/") : "") + it.name;

  var label = document.createElement("span");
  label.style.paddingLeft = (li.id.match(/\//g) || []).length * 2 + "em";

  if (it.url) {
    li.onclick = function() {
      openFile(it);

      if (activeItem) {
        $(activeItem).removeClass("active");
      }
      li.className += " active";
      activeItem = li;
    }
  } else {
    li.className += " dir-open";
    li.onclick = toggleDir.bind(li);
    li.files = [];

    label.innerHTML = '<i class="glyphicon glyphicon-folder-open file-icon"></i>';
  }
  
  label.innerHTML += it.name;

  if (it.dir) {
    var itsParent = document.getElementById("p-" + it.dir);

    if (!itsParent) {
      tokenList = it.dir.split("/");

      itsParent = addDirEntry({
            name: tokenList[tokenList.length -1],
            dir: tokenList.slice(0, tokenList.length -1).join("/"),
      });
    }

    itsParent.files.push(li);
  }

  li.appendChild(label);
  $dir.append(li);

  return li;
}

function listFiles(projId) {
  $dir.addClass("loading");

  $.ajax({
    method: "get",
    url: "/projects/" + projId + "/dir"
  })
  .done(function(list) {
    list.forEach(addDirEntry);
  })
  .fail(function(err) {
    if (err.status >= 500) {
      //TODO notify me about this error
      alert("Sorry...\n\nA server error has occured. The developer has been notified and this issue will be fixed shortly.");
    } else {
      console.error("an error occured.")
      console.error(err.responseText);
    };
  })
  .always(function() {
    $dir.removeClass("loading");
  });
}

$(document).ready(function() {
  $dir = $("#dir");
  $fileContainer = $("#file");
  fileLabel = document.getElementById("fileLabel");
  var projectId = "<%= @project.hashid.to_s %>";

  listFiles(projectId);
});
</script>

<% if @key %>
  <%= render partial: "edit", locals: {key: @key, project: @project} %>
<% end %>

<div>
  <div class="pull-right hidden file-control">
    <a class="glyphicon glyphicon-refresh file-button clickable" onclick="openFile()"></a>
    <a href="#dir" class="glyphicon glyphicon-list file-button" data-turbolinks="false"></a>
  </div>

  <h4>
    <small><%= @project.title %></small>
    <span id="fileLabel"></span>
  </h4>
</div>

<div id="file" class="hidden file-control with-loading-anim">
  <pre class="contents">
  </pre>

  <div class="loading-anim">
    <%= image_tag "spinner.svg" %>
  </div>
</div>

<div id="dir" class="list-group with-loading-anim">
  <a name="dir"></a>

  <div class="contents">
  </div>

  <div class="loading-anim">
    <%= image_tag "spinner.svg" %>
  </div>
</div>
